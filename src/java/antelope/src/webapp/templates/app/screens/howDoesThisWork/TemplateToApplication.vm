<h1>Turing this templates into your application</h1>
<p>Once you have had a look at this and want to start your
own Turbine application all you have to is follow these instructions
and you will have your own application!</p>

<h2>Step 1 - Picking a name</h2>
<p>Firstly decide a name for your application and which java
package you want it to reside in. Normally this is your internet
domain name backwards. If you work for an orgainisation that
changes its domain name on a weekly basis (such as Anite) pick something
vague as it is a pain to rename things later.</p>
<p>For this sample our new application is going to be called</p>
<pre>
	bear
</pre>
<p> and will reside in the </p>
<pre>
	org.tigris.zebra.bear
</pre>
<p>package. This follows the animal theme. A helpful hint is to never
call the package the public name of the program - because someone will
rename it sooner or later and this way you never have to change the code
to reflect a marketing name change!</p>
<h2>Step 2 - Get a copy</h2>
<p>Get a copy of antelope either as a zip file or direct from CVS. If you get it from CVS check
it out as a project called 'bear' in eclipse.</p>
<p>Run maven as per the instruction in <a href="http://zebra.berlios.de/antelope/GettingStarted.html">GettingStarted</a></p>

<h2>Step 3 - Optional The Java code</h2>
<p>The Java code with the sample application can be easily converted to a new package
using the refactoring ability of eclipse</p>
<p><b>You don't need to do this</b>. Doing this will be helpful if you plan to 
change the core antelope code a lot. But it will make it hard to update to newer versions
of antelope code.</p>
<ul>
	<li>In eclipse open the Package Explorer view</li>
	<li>Expand src/java and right click on each com.anite.antelope in turn (except com.anite.antelope.validation) and</li>
	<li>Choose refactor rename and enter the package name</li>
	<li>Expand src/test and right click on com.anite.antelope in turn and</li>
	<li>Choose refactor rename and enter the package name</li>
</ul>
<h2>Step 4 - Configuration files</h2>
<p>A number of the configuration files know about the application name<p>
<h3>src/java/HibernateCfg.xml</h3>
<p>Optionally if you renamed the packages above</p>
<ul>
	<li>In the mapping resource section change the path for all com.anite.antelope packages to the new package</li>
</ul>
<h3>src/webapp/WEB-INF/conf/TurbineResources.properties</h3>
<p>Set the following properties</p>
<ul>
	<li>mail.smtp.from=yourEmail@example.com</li>
	<li>module.packages=org.tigris.zebra.bear.modules,com.anite.antelope.modules,org.apache.turbine.modules</li>
</ul>
<p>Optionally if you renamed the packages above</p>
<ul>
	<li>tool.request.sourceLink=org.tigris.zebra.bear.modules.tools.LinkToSourceTool</li>
	<li>tool.request.menuTool=org.tigris.zebra.bear.modules.tools.MenuTool</li>	
</ul>
<h3>src/webapp/WEB-INF/web.xml</h3>
<p>Change the URL mapping for the Turbine servlet to
<pre>
&lt;servlet-mapping&gt;
		&lt;servlet-name&gt;turbine&lt;/servlet-name&gt;
		&lt;url-pattern&gt;/servlet/bear/*&lt;/url-pattern&gt;
&lt;/servlet-mapping&gt;
</pre>
<h3>src/webapp/WEB-INF/conf/componentConfiguration.xml</h3>
<p>Optionally if you renamed the packages above</p>
<p>Change</p>
<pre>
	&lt;component role="org.apache.fulcrum.security.hibernate.PersistenceHelper" 
		class="org.tigris.zebra.bear.security.hibernate.MeercatPersistenceHelper"&gt;
	&lt;/component&gt;
</pre>
<h3>src/webapp/index.jsp</h3>
<p>Change the redirect URL to bear/servlet/bear</p>
<h2>Step 5 - Maven</h2>
<p>The project.xml and project.properties files configure Maven
<h3>project.xml</h3>
<p>Change
<ul>
	<li>id = bear</li>
	<li>name = bear</li>
	<li>group = bear</li>	
	<li>currentversion = 0.1</li>
	<li>Organization = yourself</li>
	<li>package = org.tigris.zebra.bear</li>
	<li>description = an application from antelope</li>
	<li>shortdescription = an application from antelope</li>
	<li>repository = your cvs server - This is only needed if you want changelog reports or other maven bits that use CVS</li>		
	<li>developers = change to yourself</li>
	<li>nagEmailAddress = <b>your email</b> </li>
</ul>

<p> Now run maven antelope:setup
<h2>Step 6 - Configure Tomcat Eclipse integration</h2>
<p>On the project right click and bring up the properties.
In the tomcat page</p>
<ul>
	<li>Check isTomcat project</li>
	<li>Set conext name = /bear</li>
	<li>Set subdirectory = /src/webapp</li>
</ul>
<p>Now exit the dialog, right click on the project and from the Tomcat menu choose update context</p>
<h2>Step 7 - Optionally turn off bits not needed for a production application</h2>
<ul>
	<li>The source display tool can be removed from src/webapp/templates/app/navigations/DefaultBottom.vm 
</ul>

